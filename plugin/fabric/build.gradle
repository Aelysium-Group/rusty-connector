plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
}

compileJava {
    options.encoding = "UTF-8"
}

def targetJavaVersion = project.java_version as int

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.kyori:adventure-platform-fabric:${project.adventure_fabric_version}"
    modImplementation "cloud.commandframework:cloud-fabric:${project.cloud_paperfabric_version}"

    shadow project(path: ':core', configuration: 'shadow')
}

// If ever strange behaviour check the docs for reference: https://imperceptiblethoughts.com/shadow/
shadowJar {
    archiveBaseName.set('fabric')
    archiveClassifier.set('')
    archiveVersion.set('')

    mergeServiceFiles()
    minimize()
}

jar.finalizedBy('shadowJar')

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = ['version': plugin_version, 'config_version': config_version, 'magic_link_protocol_version': magic_link_protocol_version, 'minecraft_version': minecraft_version, 'loader_version': loader_version]
    inputs.properties props
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand props
    }
}