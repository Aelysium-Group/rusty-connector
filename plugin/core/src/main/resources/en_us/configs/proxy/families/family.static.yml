############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                      Static Family                       #
#                                                          #
#               ---------------------------                #
#                                                          #
# | Families defined here are optimized for stateful       #
# | minecraft gamemodes.                                   #
#                                                          #
# | When players join a static family, their initial       #
# | server will be memorized, and they'll be connected     #
# | back into that server on future family connections     #
# | as well.                                               #
#                                                          #
# | This initial server is called the player's residence.  #
#                                                          #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################

############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                       Display Name                       #
#                                                          #
#               ---------------------------                #
# | Display name is the name of your family, as players    #
# | will see it, in-game.                                  #
# | Display name can appear as a result of multiple        #
# | factors such as the friends module being enabled.      #
#                                                          #
# | Multiple families are allowed to have the              #
# | same display name.                                     #
#                                                          #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
display-name: ""



############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                      Parent Family                       #
#                                                          #
#               ---------------------------                #
# | The parent family is the family that players will      #
# | be sent to when they run /hub, or when a fallback      #
# | occurs. If the parent family is unavailable, the       #
# | root family is used instead.                           #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
parent-family: ""



############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                     First Connection                     #
#                                                          #
#               ---------------------------                #
# | When players first connect to a static family, they    #
# | will be routed to the best server based on the         #
# | family's load balancing algorithm (just like scalar    #
# | families.)                                             #
#                                                          #
# | Once the player is routed to the proper server,        #
# | that server will be linked to that player and anytime  #
# | the player joins the family in the future, they'll     #
# | be connected to that specific server.                  #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################

first-connection:
############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                      Load Balancing                      #
#                                                          #
#               ---------------------------                #
# | Load balancing is the system through which networks    #
# | manage player influxes by spreading out players        #
# | across various server nodes.                           #
#                                                          #
# | In static families, load balancing only effects the    #
# | first time a player connects to the family.            #
# | Once the player connects for the first time, the       #
# | server they connected to will be remembered and        #
# | they'll be joined to that server on                    #
# | consecutive connections in the future too.             #
#                                                          #
# | The server that get's linked to a player is called     #
# | that player's "Home Server".                           #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
    load-balancer: "default"


############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                 Consecutive Connections                  #
#                                                          #
#               ---------------------------                #
#                                                          #
# | When a player connects to the family again after       #
# | already connecting at least once, they'll be routed    #
# | Directly to their resident server if it's available.   #
#                                                          #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
consecutive-connections:
    ############################################################
    #||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
    #            If Resident Server is Unavailable             #
    #                                                          #
    #               ---------------------------                #
    #                                                          #
    # | If the home server is unavailable, what should happen  #
    # | to the player?                                         #
    #                                                          #
    #  ⚫ CANCEL_CONNECTION_ATTEMPT -                          #
    #             Stop the player from connecting to this      #
    #             family. Tell them that their server is       #
    #             unavailable and that they should try again   #
    #             later.                                       #
    #  ⚫ ASSIGN_NEW_HOME -                                    #
    #             Connect the player to the load balancer and  #
    #             give them a new home server.                 #
    #             This option does not display an error to     #
    #             the player.                                  #
    #  ⚫ CONNECT_WITH_ERROR -                                 #
    #             Connect the player to a random server in     #
    #             the family (in accordance with the load      #
    #             balancing algorithm) and inform them that    #
    #             their home server was unavailable.           #
    #                                                          #
    #               ---------------------------                #
    #                                                          #
    #||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
    ############################################################
    home-server:
        if-unavailable: CANCEL_CONNECTION_ATTEMPT

#################################################################################
#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                                Expiration                                     #
#                                                                               #
#                       ---------------------------                             #
#                                                                               #
# | Set whether a player's home server should expire                            #
# | after a certain amount of time.                                             #
#                                                                               #
# | Set to "NEVER" if you don't want a player's home                            #
# | server to ever expire.                                                      #
#                                                                               #
# | This data value is a Liquid Timestamp. Read more here:                      #
#  https://wiki.aelysium.group/rusty-connector/docs/concepts/liquid_timestamps  #
#                                                                               #
#                       ---------------------------                             #
#                                   NOTE                                        #
#               If you activate expiration (changing it from                    #
#               `NEVER` to an actual value.)                                    #
#               Any already existing home servers which were                    #
#               originally set as `NEVER` will be updated to                    #
#               expire at `expiration` amount of time from now.                 #
#                       ---------------------------                             #
#                                                                               #
#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#################################################################################
        expiration: NEVER



############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                        Whitelist                         #
#                                                          #
#               ---------------------------                #
# | To setup a whitelist, you'll need to navigate to the   #
# | "whitelists" folder and follow the directions in the   #
# | provided whitelist-template.                           #
#                                                          #
# | More often than not, you will have multiple whitelist  #
# | configurations that you may want to switch between     #
# | during various points in your network's lifetime.      #
# | This system allows you to set up as many pre-defined   #
# | whitelists as you'd like, and enable or switch between #
# | then whenever you want!                                #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
whitelist:
    enabled: false

    #
    # The name of the whitelist configuration file in your "whitelists" folder.
    # You can include the ".yml" at the end of the name below if you'd like. It doesn't matter either way.
    #
    name: "whitelist-template"