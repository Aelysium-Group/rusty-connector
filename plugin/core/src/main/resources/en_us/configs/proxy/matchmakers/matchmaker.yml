############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                       Matchmaking                        #
#                                                          #
#               ---------------------------                #
# | Matchmakers are used by Ranked Families to handle      #
# | player ranking.                                        #
#                                                          #
# | When players connect to a ranked family, the           #
# | matchmaker will connect them to a game with other      #
# | players of the same rank, allowing for better          #
# | playing experiences.                                   #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################



############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                        Algorithm                         #
#                                                          #
#               ---------------------------                #
# | Algorithm controls not only how a player is ranked     #
# | but also how ranked matches are created.               #
#                                                          #
# | If you change the algorithm, player ranks will reset.  #
#                                                          #
# | Your options are:                                      #
#  ⚫ RANDOMIZED -                                         #
#           Randomly select players for a game.            #
#           Player skill levels are totally ignored.       #
#  ⚫ WIN_LOSS -                                           #
#           Ranks player based on their win/loss ratio.    #
#  ⚫ WIN_RATE -                                           #
#           Ranks players based on the percentage of how   #
#           many games they've won versus lost.            #
#           Win-rate ranking ignores the number of games   #
#           ranked players have played.                    #
#  ⚫ ELO -                                                #
#           Ranks players based on a multiplayer alternate #
#           implementation of the zero-sum ELO ranking     #
#           algorithm.                                     #
#                                                          #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
algorithm: RANDOMIZED



#
# The minimum number of players that must be in a game session.
# This value is inclusive.
#
min: 8



#
# The maximum number of players that can be in a game session.
# This value is inclusive.
#
max: 10



#
# A numeric value representing how far apart players in a session are allowed to be in rank.
# This value is ignored for the RANDOMIZED algorithm.
# For example if you use WIN_LOSS and a player joins with a rank of 0.6 and variance is 0.1,
# Players with ranks of 0.5 and 0.7 will be able to also join this player's session.
#
variance: 0.2



#
# Whether a player should be reconnected to their previous session if
# it's still running when they try to join the queue.
#
# If false, the player will be put into queue for a new session instead.
#

reconnect: true



#
# Sometimes players will be too far apart in rank for the matchmaker to make a session.
# Anytime there are enough players to be able to make a session
# but no session is able to be made (because the variance range isn't large enough),
# variance will be increased by this value until another session can be made.
#
# Once a session can be made, variance will reset to the default value.
#
# If there are not enough players to even make a single session,
# variance will stay at the base value.
#
variance-expansion-coefficient: 0.1



#
# If a session is built with less than `max` players, there's opportunity for it to gain more players by expanding variance.
# This value defines how many times variance must expand before a sub-max session is accepted.
# For example, a value of 3 requires that sessions have 3 variance expansions before they're accepted.
# If they don't fill up all the way, the session at its current player count will be accepted.
# If the session manages to reach max prior to this number, it will be accepted.
#
required-expansions-for-accept: 0



#
# A LiquidTimestamp representing how often the matchmaker should review its waiting players and attempt to
# build a new game session
# This should be set relatively low depending on what you expect player influxes to be.
# Can't be set lower than `3 SECONDS`.
#
# Keep in mind that this setting doesn't necessarily mean that new matches will be made every interval.
# Matches will only be made if there is a satisfactory number of players with the proper ranks.
#
session-dispatch-interval: 10 SECONDS



#
# If a session is active should new players be able to join it?
# If enabled, and assuming the session isn't at max capacity.
# This may allow players to join a session in the middle of a game.
#
freeze-active-sessions: false



#
# If players quit the game, how many players can be left in the game before the game is closed.
# Set this value to be -1 if you want it to be the same number as `session.building.min`.
#
closing-threshold: -1



#
# Should players that quit the game receive a "lose"?
# Quitting is defined as a player leaving a session while it's still going.
#
quitters-lose: false



#
# Should the players that stay in the game when it closes receive a "win"?
# This option effects the fact that, if a session's player count drops below `min`, it will implode.
# A session implosion means that the session will end instantly and all players will be returned to the waiting location.
#
stayers-win: false



#
# Should players be able to use "/leave" to leave the matchmaking queue?
#
leave-command: false



#
# If a player leaves the matchmaking queue should they be booted to their family's parent?
#
parent-family-on-leave: false



#
# Should players see actionbar and bossbar messages while they're in the matchmaking queue?
# When this is enabled, players will be informed of the status of their queue such as
# "waiting for players", "waiting for open servers" etc.
# If you disable this, you should probably have your own system to let players know what's happening.
#
show-info: true



#
# ELO specific ranking configurations.
#
elo:
    initial-rank: 1200
    elo-factor: 400
    k-factor: 32

