#############################################################
#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                     Elastic Autoscaler                    #
#                                                           #
#               ----------------------------                #
#                                                           #
# | Autoscalers hook directly into your Kubernetes instance #
# | to allow your families to dynamically resize the number #
# | of servers they use to handle different                 #
# | influxes of players.                                    #
#                                                           #
# | If you assign the same autoscaler to multiple families  #
# | They will all follow the rules of that one autoscaler.  #
#                                                           #
# | An elastic autoscaler will dynamically adjust server    #
# | volumes based on player influxes.                       #
#                                                           #
#               ----------------------------                #
#                                                           #
#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#############################################################
#
# Is this auto-scaler enabled?
# If false, the family will not scale at all.
#
enabled: true

#
# The minimum number of servers that are allowed to be active.
# Even if no players are online, there will never be fewer servers than this number.
#
minimum-capacity: 1

#
# The maximum number of servers that this autoscaler is allowed to create.
# The autoscaler will never be allowed to create more servers than this amount.
#
max-capacity: 10

#
# Generating is the act of creating new servers.
#
generating:
    #
    # The ratio of players to server capacity that needs to be met for new servers to be created.
    # If the total of your server's soft-cap capacity is 100 players and you have 80 players online,
    # it's a ratio of 0.8.
    #
    player-ratio: 0.8

#
# Shaving allows RustyConnector to shut down servers that it doesn't need anymore.
#
shaving:
    enabled: true

    #
    # The ratio of players to server capacity that needs to be met for servers to be deleted.
    # If the total of your server's soft-cap capacity is 100 players and you have only 20 players online,
    # it's a ratio of 0.2.
    #
    # The server with the least number of players will be deleted first.
    #
    player-ratio: 0.0

#
# Padding determines how many servers should be added on-top of the ones the autoscaler needs.
# If the autoscaler decides that it needs to have 5 servers in total to handle the current player count;
# a padding of 1 will cause it to create 6 servers in total.
#
padding:
    enabled: false
    amount: 1