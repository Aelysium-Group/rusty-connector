############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                         Family                           #
#                                                          #
#               ---------------------------                #
# | Families are a collection of servers. To register      #
# | new servers into a family, you need to configure       #
# | your sub-servers appropriately.                        #
#                                                          #
# | If your sub-servers use family names that don't match  #
# | what you define in config.yml, they will               #
# | not be registered.                                     #
#                                                          #
# | In this config you can manage this family's            #
# | load-balancing, whitelist, and more!                   #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################

############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                      Load Balancing                      #
#                                                          #
#               ---------------------------                #
# | Load balancing is the system through which networks    #
# | manage player influxes by spreading out players        #
# | across various server nodes.                           #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
load-balancing:

############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                        Algorithm                         #
#                                                          #
#               ---------------------------                #
# | Depending on your needs, you might want to balance     #
# | player influxes in various ways.                       #
# | RustyConnector currently supports the following.       #
# | balancing algorithms if there are other algorithms     #
# | you'd like to see in the future, let us know!          #
#                                                          #
#  ⚫ LEAST_CONNECTION -                                   #
#             Connects players to the server with the      #
#             the fewest players currently connected.      #
#             This mode is best if you want evenly         #
#             distributed players across all servers.      #
#  ⚫ ROUND_ROBIN -                                        #
#             Every time a connection occurs, the next     #
#             server in the load balancer will be queued   #
#             for the next connection.                     #
#             Once the load balancer reaches the end of    #
#             the server queue, the load balancer will     #
#             loop back to the beginning and start again.  #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
    algorithm: ROUND_ROBIN

#
# If set to `true`. Persistence will cause the algorithm to keep trying to connect the player to this
# family if, for some reason they haven't been able to connect yet.
# If set to `false`; The algorithm will give up on trying to connect the player to the family
# the moment it fails. It will then return an error message.
#
    persistence: false


############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                        Whitelist                         #
#                                                          #
#               ---------------------------                #
# | RustyConnector attempts to be as flexible as possible  #
# | when configuring whitelists!                           #
# | To setup a whitelist, you'll need to navigate to the   #
# | "whitelists" folder and follow the directions in the   #
# | provided whitelist-template.                           #
#                                                          #
# | More often than not, you will have multiple whitelist  #
# | configurations that you may want to switch between     #
# | during various points in your network's lifetime.      #
# | This system allows you to setup as many pre-defined    #
# | whitelists as you'd like, and enable or switch between #
# | then whenever you want!                                #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
use-whitelist: false

#
# The name of the whitelist configuration file in your "whitelists" folder.
# You can include the ".yml" at the end of the name below if you'd like. It doesn't matter.
#
whitelist: "whitelist-template"