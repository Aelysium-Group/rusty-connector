############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                     Rounded Family                       #
#                                                          #
#               ---------------------------                #
# | Families are a collection of servers. To register      #
# | new servers into a family, you need to configure       #
# | your sub-servers appropriately.                        #
#                                                          #
# | If your sub-servers use family names that don't match  #
# | what you define in config.yml, they will               #
# | not be registered.                                     #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################

############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                      Parent Family                       #
#                                                          #
#               ---------------------------                #
# | When sessions are complete, what family should users   #
# | be connected to?                                       #
#                                                          #
# | Make sure that the family you list here has been       #
# | defined in `families.yml`! Otherwise this won't work!  #
#                                                          #
# | This family must be either a Static or Scalar family   #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
parent-family: "lobby"

############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                         Rounds                           #
#                                                          #
#               ---------------------------                #
# | A Round, refers to a round of players.                 #
#                                                          #
# | When enough players are added to the round, the round  #
# | will then request a session from the family.           #
#                                                          #
# | If the family is able to put the round into session    #
# | it will do so immediately. Otherwise, the round of     #
# | players will have to wait for a session to become      #
# | available.                                             #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
rounds:
    #
    # The minimum number of players a round must contain before it can
    # attempt to start a session.
    #
    min-players: 10

    #
    # The maximum number of players that can join a round before it starts a session.
    # This option allows more players to join a round if it is waiting for a session to open up.
    #
    max-players: 14

    #
    # Once the round is ready to start a session, how long should it wait
    # before attempting to do so?
    #
    # Set to `NONE` if you want the round to instantly try starting a session as soon as possible.
    #
    # This data value is a Liquid Timestamp. Read more here: https://github.com/Aelysium-Group/rusty-connector/wiki/Liquid-Timestamps
    #
    session-start-cooldown: NONE

    #
    # If the round is waiting for a session to open, and the player count drops below `min-players`
    # should the round withdraw its session attempt?
    #
    cancel-on-player-loss: false

#############################################################
#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                Session Lifecycle Commands                 #
#                                                           #
#               ----------------------------                #
# | Configure what commands you want the session to         #
# | run during its lifetime.                                #
#                                                           #
# | Commands will be run, in order, on the sub-server that  #
# | the session is active on.                               #
#                                                           #
# | This way you can run custom scripts and commands when   #
# | a session has begun or ends!                            #
#                                                           #
# | Commands are run by the console.                        #
#               ----------------------------                #
#                                                           #
#|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#############################################################
session-lifecycle-commands:
    #
    # Triggers when the session first begins.
    # There's no promise that all players will be connected to the server yet
    # when this is triggered.
    #
    start: []
    #
    # Triggers when the session ends.
    # Players will already be disconnecting or disconnected by the time this triggers.
    #
    end: []

############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                          Lang                            #
#                                                          #
#               ---------------------------                #
# | Here you can customize the lang used by this Rounded   #
# | family!                                                #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
lang: []



whitelist:
############################################################
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
#                        Whitelist                         #
#                                                          #
#               ---------------------------                #
# | RustyConnector attempts to be as flexible as possible  #
# | when configuring whitelists!                           #
# | To setup a whitelist, you'll need to navigate to the   #
# | "whitelists" folder and follow the directions in the   #
# | provided whitelist-template.                           #
#                                                          #
# | More often than not, you will have multiple whitelist  #
# | configurations that you may want to switch between     #
# | during various points in your network's lifetime.      #
# | This system allows you to set up as many pre-defined   #
# | whitelists as you'd like, and enable or switch between #
# | then whenever you want!                                #
#               ---------------------------                #
#                                                          #
#||||||||||||||||||||||||||||||||||||||||||||||||||||||||||#
############################################################
    enabled: false

#
# The name of the whitelist configuration file in your "whitelists" folder.
# You can include the ".yml" at the end of the name below if you'd like. It doesn't matter either way.
#
    name: "whitelist-template"